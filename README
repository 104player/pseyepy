A python API for acquisition and saving of video from the PS3Eye camera.

Features:
    * stream simultaneously from as many cameras as you have available usb ports
    * frame rates from arbitrarily low to 125+ fps
    * resolutions 640x480 or 320x240
    * control of camera settings include gain, exposure, whitebalance, hue, brightness, contrast, flips, etc.
    * independent control of all parameters for each camera
    * high-resolution timestamps
    * simple gui for real-time video display
    * save movies to file/s

This package is based on all open-source libraries compatible with macOS, Windows, and Linux:
    * libusb
    * [a substantially modified version of the] PS3EYEDriver project (https://github.com/inspirit/PS3EYEDriver)
    * ffmpeg (only needed for saving movies)

TODO:
    * crucial: run threads for Camera.read to allow for different framerates across cameras
    * for stream saving: implement strict match between frame count and timestamp count
    * generalize paths for installation (libusb, c compilers), ffmpeg
    * explore auto-exposure settings, which is acting funky
    * protect unacceptable attribute setting in Camera class, also allow slice (:) setting
    * build a multithreaded cython option for camera streaming to free the main process
    * simultaneous display/saving?
    * documentation
    * benchmarks, performance tests
    * benchmark timestamps again (try to replicate the scenario where they were lagging; though seems not to happen anymore)

deverett [at] princeton [dot] edu
